package LeetCode;

public class FindTheDifference {

//	You are given two strings s and t.
//
//	String t is generated by random shuffling string s and then add one more letter at a random position.
//
//	Return the letter that was added to t.
//
//	 
//
//	Example 1:
//
//	Input: s = "abcd", t = "abcde"
//	Output: "e"
//	Explanation: 'e' is the letter that was added.
//	Example 2:
//
//	Input: s = "", t = "y"
//	Output: "y"
//	 
//
//	Constraints:
//
//	0 <= s.length <= 1000
//	t.length == s.length + 1
//	s and t consist of lowercase English letters.

	
	
	
//	In this problem we are given 2 strings "t" & "s". example:
//		s = "abc"
//		t = "bacx" in "t" we have one additional character
//
//		So, we have to find one additional character there are couple of ways to solve this problem.But we will use BITWISE method to solve this problem
//
//		So, using XOR concept we will get our additional character, understand it visually :-
	
	
// for eg [5,10,5,10,15]
// in this case 5^5 will cancel each other
// 10^10 wll cancel each other hence we are left with unique element
// hence using ^ for two string and storing in commin variable common elements will cancel each other with the only unique element will be left.
	
	
	public static void main(String[] args) {
		
		String s = "abcd", t = "abcde";
		String  s1 = "", t1 = "y";
		
		char c = findTheDifference(s, t);
		System.out.println("Result "+c);
	}
	
	 public static char findTheDifference(String s, String t) {
         
		 char c = 0;
     
         for(char cs : s.toCharArray()) {
        	 
        	 c ^= cs;
         } 
        
         for(char ct : t.toCharArray())  {
        	 
        	 c ^= ct;
         
         }
        
         return c; 
    }
	
}
